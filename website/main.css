:root {
    --background: #FFFFFFbf;
    --background-solid: #FFFFFF;
    --accent: #555555;
    --accent-transparent: #5555551f;
    --shadow: #22222280;
    --blur: blur(15px);
}
  
[data-theme='dark'] {
    --background: #333333af;
    --background-solid: #333333;
    --accent: #cccccc;
    --accent-transparent: #cccccc2f;
    --shadow: #00000080;
    --text-color-normal: hsl(210, 10%, 62%);
    --text-color-light: hsl(210, 15%, 35%);
    --text-color-richer: hsl(210, 50%, 72%);
    --text-color-highlight: hsl(25, 70%, 45%);
}

body {
    margin: 0; /* dk if henry needs the margin, comment out when needed */
    overflow: hidden;
    width: 100vw;
    color: var(--accent)
}

#mapid { 
    height: 100vh; 
    width: 100vw; 
    background-color: var(--background-solid);
    background-size: 100vw 100vh;
    z-index: 1;
}

.overlay {
    padding: 1px;
    margin: 0;
}

.bus {
}

.newly-updated {
    animation: highlight 3s cubic-bezier(.76,.05,.86,.06);
}

@keyframes highlight {
    0% {
        filter: hue-rotate(120deg);
    }
    100% {
        filter: none;
    }
}

.bus-image {
    transform-origin: center;
}
#canvas {
    z-index: 401;
}

#bottom-controls{
    display: flex;
    flex-direction: column;
    width: 100vw;
    align-items: stretch;

    position: absolute;
    bottom: 0;/*bottom: -30px;*/

    /*clip-path: url(#myClip);*/
    z-index: 2;
    font-size: 13px !important;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

input {
    font-size: 1em; /* override default input font size to match bottom control font size */
}

#bump-container {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    height: 6vmax; /* fix truncated height */
    max-height: 1.6em;
    width: max(calc(100vw - 12vmax), calc(100vw - 8em));
    z-index: 1;
}

#bump, #bump > svg {
    max-height: 1.6em;
    width: 12vmax;
    max-width: 8em;
}

#bump {
    height: 2.355vmax;
    position: relative;
    left: 0%;
}

#bump > svg {
    height: 2.4vmax;
    fill: var(--background-solid);
}

#progress {
    width: 100%;
    background-color: var(--background-solid);
    z-index: 5;
}

#time-slider {
    -webkit-appearance: none;  /* Override default CSS styles */
    appearance: none;
    height: 0;
    margin: 0 min(4.5vmax, 3em);
    width: max(calc(100vw - 9vmax), calc(100vw - 6em));
    background-color: var(--accent); /* need to fix ux of clicking outside the slider area so that it goes to one end */
}

#time-slider::-webkit-slider-thumb {
    -webkit-appearance: none;  /* Override default CSS styles */
    appearance: none;
    /*background-image: url('assets/slider-thumb.svg');
    background-position: 0 0;
    width: 120px;
    height: 47px;*/
    width: 3vmax;
    max-width: 2em;
    height: 3vmax;
    max-height: 2em;
    border-radius: 2vmax;
    position: relative;
    bottom: min(1.5vmax, 1em);
    background-color: var(--accent);
    cursor: pointer;
    z-index: 5;
    -webkit-transition: left 2s ease-out;
    -moz-transition: left 2s ease-out;
    -o-transition: left 2s ease-out;
    transition: left 2s ease-out;
}

.tooltip {
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 10px;

    background-color: var(--background);
    backdrop-filter: var(--blur);
    -webkit-backdrop-filter: var(--blur);
    border-radius: 10px;
}

#slider-pos {
    position: relative;
    max-width: 150px;
    max-height: 50px;
    padding: 6px;
    margin: 4px;
}

#button-controls {
    display: none;
    flex-direction: row;
    justify-content: start;
    align-items: center;

    width: 100%;
    padding: 5px 0;
    background-color: var(--background);
    -webkit-backdrop-filter: var(--blur);
    backdrop-filter: var(--blur);
}

.expandable-control {
    display: flex;
    flex-direction: row;
    justify-content: start;
    align-items: center;
}

.button-control-icon-container {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 0.4em;
    width: 3em;
    height: 3em;
    background-color: transparent;
    border-radius: 0.4em;
}

.button-control-icon-container:hover {
    background-color: var(--accent-transparent);
}

.button-control-icon {
    width: 1.5em;
    height: 1.5em;
    fill: var(--accent);
}

#play-pause > svg{
    width: 3em;
    height: 3em;
    fill: var(--accent);
}

.expandable-control > *:not(:first-child){
    max-width: 100%;
    transition: max-width 0.2s linear;
}

.expandable-control > *:not(:first-child) > *{
    opacity: 1;
    transition: opacity 0.5s 0.2s;
}

.picker {
    display: flex;
    flex-direction: row;
    border-radius: calc(0.6em + 4px);
    background-color: var(--accent-transparent);
    margin: 0 5px;
    position: relative;
    left: 0;
    line-height: 1.2;
}

.picker > * {
    display: flex;
    flex-direction: row;
    justify-content: center;
    border-radius: calc(0.6em + 4px);
}

.picker > *:not(#picker-highlight) {
    padding: 4px;
    margin: 0px;
    width: 52px;    
    cursor: pointer;
    z-index: 3;
}

#picker-highlight {
    position: absolute;
    left: 60px;
    right: 300px;
    background-color: var(--accent-transparent);
    height: 100%;
    z-index: 0;
}

.picker.hidden{
    max-width: 0 !important;
    overflow: hidden;
    margin: 0;
    transition: max-width 0.2s linear 0.2s, margin 0.1s linear;
}

.picker.hidden > *:not(#picker-highlight) {
    opacity: 0 !important;    
    transition: opacity 0.5s;
}

.picker.hidden > #picker-highlight {
    opacity: 0 !important;    
    transition: opacity 0.5s 0.5s;
}

.control-value {
    opacity: 0;
    transition: opacity 0.2s 0.5s;
}

.hidden + .control-value {
    opacity: 1;
}

/* TODO fix init positions to prevent flicker*/
/* cool thing: use @container but it's too experimental at the time of writing oopsie */
@media only screen and (max-width: calc(42 * 13px)) {
    .expandable-control > *:not(:first-child) > *{
        opacity: 1;
        transition: opacity 0.5s 0.2s;
    }
    
    .picker {
        flex-direction: column;
        background-color: var(--background);
        backdrop-filter: var(--blur);
        -webkit-backdrop-filter: var(--blur);
        align-items: stretch;
        margin: 0px;

        position: absolute;
        width: 70%;
        left: 15%;
        bottom: calc(100% + 4em);
        border-radius: calc(0.6em + 8px);
    }
    
    .picker > * {
        display: flex;
        flex-direction: row;
        justify-content: left;
        align-items: center;
        border-radius: calc(0.6em + 8px);
    }
    
    .picker > *:not(#picker-highlight) {
        padding: 0px;
        margin: 0px;
        padding-left: 30%;
        width: 70%;
        cursor: pointer;
        z-index: 3;
        height: 38px;
        font-size: 1.15em;
        background-color: unset;
    }
    
    #picker-highlight {
        left: calc(12% - 9px);
        top: 48px;
        bottom: 200px;
        width: 18px;
        height: unset;
        background-color: var(--accent);
        z-index: 0;
    }
    
    .picker.hidden > *:not(#picker-highlight) {
        opacity: 0 !important;    
        transition: opacity 0.5s;
    }
    
    .picker.hidden > #picker-highlight {
        opacity: 0 !important;    
        transition: opacity 0.5s 0.5s;
    }

    .selected {
        background-color: var(--accent-transparent) !important;
    }
  }